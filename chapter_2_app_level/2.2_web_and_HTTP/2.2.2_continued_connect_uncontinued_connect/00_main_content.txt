在许多因特网应用程序中，客户和服务器在一个相当长的时间范围内通信，其中客户发出一些列请求并且服务器对每个请求进行响应。一句应用程序以及该应用程序的使用方式，这一些利润请求可以以规则的间隔周期性地或者间断性地一个接一个发出。当这种cs的交互是经TCP进行的，应用程序的研发者就需要做一个重要决定，即每个请求/响应对是经一个单独的TCP连接发送，还是所有的请求及响应经相同的TCP连接发送。采用前一种方法，该应用程序被称为使用非持续连接；采用后一种方法，该应用程序被称为使用持续连接。为了深入地理解该设计问题，我们研究在特定的应用程序即HTTP的情况下持续连接的优点和缺点，HTTP既能够使用费持续连接，也能够使用持续连接。尽管HTTP在其默认方式下使用持续连接，HTTP客户和服务器也能配置成使用非持续性连接
  1、采用非持续连接的HTTP
  （1）HTTP客户进程的端口号是80发起一个到服务器www.someSchool.edu的TCP连接，该端口号是HTTP的默认端口。在客户和服务器上分别有一个套接字与该连接相关联
  （2）HTTP客户经它的套接字向该服务器发送一个HTTP请求报文。请求报文中包含了路径名/someDepartment/home.index
  （3）HTTP服务器进程经它的套接字接收该请求报文，从其存储器中检索对象www.someSchool.edu/someDepartment/home.index，在一个HTTP响应报文中封装对象，并通过其套接字向客户发送响应报文
  （4）HTTP服务器进程通知TCP断开该TCP连接（但是知道TCP确认客户已经完整地收到响应报文为止，它才会实际中断连接）
  （5）HTTP客户接收响应报文，TCP连接关闭。该报文支出封装的对象是一个HTML文件，客户从响应报文中提取该文件，检查HTML文件，得到10个JPEG图形的引用
  （6）对每个引用的JPEG图形对象重复前5个步骤
  HTTP规范仅定义了在HTTP客户程序与HTTP服务器程序之间的通信协议
  其中每个TCP连接在服务器发送一个对象后关闭，即该连接并不为其他的对象而持续下来。值的注意的是每个TCP连接只传输一个请求报文和一个响应报文
  那这些TCP连接是串行的还是并行的呢？在默认方式下，大部分浏览器打开5~10个并行的TCP连接，而每条连接处理一个请求响应事务
  下面我们估算一下接收到全部文件的整体时间。位词，我们给出往返时间的定义，该时间是指一个段分组从客户到服务器然后再返回客户所花费的时间。RTT包括分组传播时延，分组在中间路由器和交换机上的排队时延以及分组处理时延。首先涉及到TCP的三次握手过程，即客户向服务器发送一小段TCP报文段，服务器用一小段TCP报文段做出确认和响应，最后，客户向服务器返回确认。三次握手中前两部分所耗费的时间占用一个RTT。完成三次握手的前两个部分后，客户结合三次握手的第三部分向该TCP连接发送一个HTTP请求报文。一旦该请求报文到达服务器，服务器就在该TCP连接上发送HTML文件。该HTTP请求/响应用去了另一个RTT。因此，粗略地讲，总的响应时间就是两个RTT加上服务器传输HTML文件的时间
  2、采用持续性连接的HTTP
  非持续性连接有一些确定。首先，必须为每一个请求的对象建立和维护一个全新的链接。对于每个这样的连接，在客户和服务器中都要分配TCP的缓冲区和保持TCP变量，这个Web服务器带来了严重的负担，因为一台Web服务器可能同时服务于数以百计不同的客户请求。第二，就像我们之前描述的，每一个对象经手两倍RTT的交付时延，即一个RTT用于创建TCP，另一个RTT用于请求和接受一个对象
  一般来说，如果一条连接经过一定时间间隔仍未被使用，HTTP服务器就关闭该连接。HTTP的默认模式是使用带流水线的时需连接
