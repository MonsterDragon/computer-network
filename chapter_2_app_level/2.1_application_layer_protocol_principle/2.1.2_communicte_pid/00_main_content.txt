在操作系统的属于中，进行通信的实际上是进程而不是程序。一个进程可以被认为是运行在端系统中的一个程序。当进程运行在相同的端系统上时，它们使用进程间通信机制相互通信。进程间通信的规则由端系统上的操作系统确定
在两个不同端系统上的进程通过跨越计算机网络交换报文而相互通信。发送进程生成并向网络中发送报文；接收进程接收报文并可能通过姜宝文发送回去进行响应
1、客户和服务器进程
在给定的一对进程之间的通信会话场景中，发起通信的进程被标识为客户，在会话开始时等待联系的进程是服务器
2、进程与计算机网络之间的接口
进程通过一个称为套接字的软件接口向网络发送报文和从网络接收报文。进程可类比于一座房子，而它的套接字可以类比于它的门
套接字是同一台主机内应用层与传输层之间的接口。由于改套接字时间里网络应用程序的可编程接口，因此套接字也称为应用程序和网络之间的应用程序编程接口（API）。应用程序开发者可以控制套接字在应用层短的一切，但是对该套接字的传输层端几乎没有控制权。应用程序开发者对于传输层的控制仅限于：1、选择传输层协议2、也许能设定几个传输层参数，如最大缓存和最大报文段长度等。一旦应用程序开发者选择了一个传输协议，则应用程序就建立在由该协议提供的传输层服务上
3、进程寻址
客户端进程向服务端进程发送报文，客户端进程需要一个地址。为了标识该接收进程，需要定义两种信息：1、主机地址2、定在目的主机中的接收进程的标识符
在因特网中，知己由其IP地址标识。IP地址是一个32位的二进制数且它能够唯一的标识主机。除了知道报文送往目的地的主机地之外，发送进程还必须制定运行在接收主机上的接收进程。因为一般而言一台主机能够运行许多网络应用。这些信息是需要的。目的地端口号用于这个目的
